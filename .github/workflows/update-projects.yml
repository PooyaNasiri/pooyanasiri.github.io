name: Update Recent Projects

on:
  schedule:
    - cron: "0 * * * *"  # Every hour
  workflow_dispatch:      # Also lets you trigger manually

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Fetch recent repos and commits
        run: |
          set -e
          mkdir -p data
          echo "Fetching repos..."
          curl -s https://api.github.com/users/PooyaNasiri/repos?per_page=100 > repos.json

          echo "[" > data/recent.json

          jq -c '.[] | {name: .name, description: .description}' repos.json |
          while read -r repo; do
            name=$(echo "$repo" | jq -r .name)
            desc=$(echo "$repo" | jq -r .description)
            echo "Fetching commit for $name..."
            commit_info=$(curl -s "https://api.github.com/repos/PooyaNasiri/$name/commits?per_page=1")
            commit_date=$(echo "$commit_info" | jq -r '.[0].commit.committer.date')

            echo "$commit_date|$name|$desc" >> commits_temp.txt
          done

          # Sort by commit date (descending), take top 3
          sort -r commits_temp.txt | head -n 3 | while IFS='|' read -r date name desc; do
            jq -n \
              --arg name "$name" \
              --arg url "https://github.com/PooyaNasiri/$name" \
              --arg desc "$desc" \
              --arg date "$date" \
              '{name: $name, html_url: $url, description: $desc, last_commit: $date}' >> data/recent.json
            echo "," >> data/recent.json
          done

          sed -i '$ s/,$//' data/recent.json
          echo "]" >> data/recent.json
          
      - name: Commit and push
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add data/recent.json
          git commit -m "Update recent projects" || echo "No changes"
          git push
